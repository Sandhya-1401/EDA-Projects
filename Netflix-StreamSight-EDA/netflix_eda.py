# -*- coding: utf-8 -*-
"""Netflix_EDA.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N0hXs2pwgtLm16cdqHFYU1zaSkU0zM04

# **Project Name**

## **Netflix StreamSight : A Visual Storytelling with EDA**

Project Type: Exploratory Data Analysis ( EDA )

Contribution - Individual

Member Name: Rana Sandhya

# **Project Summary**

## **Unlocking Content Trends on Netflix Through Data Exploration**

This project presents a deep exploratory data analysis (EDA) of Netflix's content catalog to uncover meaningful trends and patterns that influence platform strategy and viewer engagement.

By leveraging Python-based data analysis and visualization techniques, the study aims to address key business questions such as:


*   How has Netflix‚Äôs content evolved over the years?

*   Which countries, ratings, and genres dominate the platform?
*   Are there seasonal patterns in content additions?
*   What is the typical duration of movies vs TV shows?
*   How do content types vary across regions?


These insights support data-driven decision-making in content acquisition, regional targeting, platform design, and customer retention strategies for a globally competitive streaming service like Netflix.

# **GitHub Link**

https://github.com/Sandhya-1401/EDA-projects/tree/main/Netflix-StreamSight-EDA

# **Problem Statement**

As Netflix continues to expand its global content library, it becomes increasingly challenging to manage, curate, and recommend relevant content to users. With thousands of titles spanning across various countries, genres, and content types, understanding what content works ‚Äî and where gaps lie ‚Äî is critical.

This project aims to explore Netflix‚Äôs content dataset to answer strategic questions like:
- What types of content are being added over time?
- Which countries and genres dominate the platform?
- Are there gaps in content distribution across ratings, countries, or release years?
- How does content addition trend over time?

By identifying content trends and gaps, Netflix can better tailor its acquisition, production, and recommendation strategies.

# **Business Objective**

The **goal** is to perform Exploratory Data Analysis (EDA) on Netflix‚Äôs dataset to derive insights that will help Netflix:

- üìä Understand content trends based on type, release year, and rating
- üåç Analyze country-wise content distribution and identify regional strengths or gaps
- üé¨ Detect dominant and underrepresented genres for potential investment
- üìà Recognize the evolution of content volume over the years
- üí° Support data-driven decisions in marketing, content strategy, and personalization

These insights will empower Netflix to improve content planning, enhance user experience, and maintain a competitive edge.

# **STEP 1: Know Your Data or Data Understanding**

**In this step, we explored the dataset's basic structure, size, and quality to build an initial understanding before diving deeper into analysis.**

### **Import Libraries**
"""

# Basic Data Analysis Libraries
import numpy as np
import pandas as pd

# Visualization Libraries
import matplotlib.pyplot as plt
import seaborn as sns

"""## **Dataset Loading**"""

# Upload step for Google Colab
from google.colab import files
uploaded = files.upload()

# Load the dataset
df = pd.read_csv('Netflix_Dataset.csv')

"""## **Dataset First View**"""

# First 5 rows
df.head()

# Quick look at the shape and columns
print("Dataset Shape : ", df.shape)
df.columns

"""## **Dataset Shape & Structure**"""

#Duplicate Rows in dataset
duplicate_count = df.duplicated().sum()
print(f"Total Duplicate Rows in the Dataset: {duplicate_count}")

print(f"Number of Rows: {df.shape[0]}")
print(f"Number of Columns: {df.shape[1]}")
print("\nColumn Names:\n", df.columns.tolist())

"""## **Missing Values/Null Values**"""

# Count missing values in each column
missing_values = df.isnull().sum()
print("Missing/Null Values per Column:\n")
print(missing_values[missing_values > 0])

missing_percentage = (df.isnull().sum() / len(df)) * 100
print("Missing Data Percentage per Column:\n")
print(missing_percentage[missing_percentage > 0])

import missingno as msno
import matplotlib.pyplot as plt

msno.bar(df)
plt.title('Missing Values Bar Chart')
plt.show()

"""## **What did you know about your dataset?**

The Netflix dataset contains **7,787 rows and 12 columns**, detailing TV shows and movies available on the platform. It provides insights into content trends, ratings, and geographical data, making it ideal for analyzing user preferences and operational efficiency.

### üßæ Key Column Categories:

- **Content Details**: `title`, `type`, `duration`, `rating`, `description` ‚Äî useful for analyzing content types, durations, and age ratings.
- **Release & Addition Info**: `release_year`, `date_added` ‚Äî helps track content trends over time.
- **People Behind the Content**: `director`, `cast` ‚Äî useful for identifying popular directors or actors.
- **Regional Data**: `country` ‚Äî allows for geographical content distribution analysis.

### ‚ùó Missing Values:

- **Missing Columns**: `director`, `cast`, `country`, `rating`, and `date_added` ‚Äî addressed during data cleaning, using imputations like "Unknown" or the most frequent value (mode).

# **STEP 2: Understanding Dataset Variables**

**We analyzed each variable's unique values and data types to understand their significance, relevance, and potential impact on further analysis.**
"""

# Basic Information about the dataset
df.info()

# Dataset Columns
df.columns

# Summary statistics
df.describe()

"""## **Check Unique Values for Each Variable**"""

# Check Unique Values for each variable.

print("Unique Values Count per Column:\n")
for col in df.columns:
    print(f"{col}: {df[col].nunique()} unique values")

"""# **STEP 3: Data Wrangling, Cleaning, Preprocessing and Transformation**

**We cleaned missing values, corrected data types, and transformed features to ensure the dataset is reliable, consistent, and ready for meaningful analysis.**
"""

# Check data types and null values
df.info()

"""## **Missing Values or Null Values**"""

# Check how many missing values are in each column
df.isnull().sum()

"""## **Feature Engineering**

**We created new columns derived from existing data to help with further analysis and modeling. These engineered features will be useful for uncovering patterns and trends.**
"""

df['date_added'] = pd.to_datetime(df['date_added'], format='mixed', errors='coerce')

# Create new features from date
df['year_added'] = df['date_added'].dt.year
df['month_added'] = df['date_added'].dt.month
df['day_added'] = df['date_added'].dt.day

# For Movies, extract duration in minutes
df['duration_num'] = df['duration'].str.extract('(\d+)').astype(float)
df['duration_type'] = df['duration'].str.extract('([a-zA-Z]+)')

# Optional: Fill NaNs if needed
df['duration_type'].fillna('Unknown', inplace=True)

df['num_cast'] = df['cast'].apply(lambda x: len(str(x).split(',')) if pd.notnull(x) else 0)

# Visualize missing values
plt.figure(figsize=(12, 6))
sns.heatmap(df.isnull(), cbar=False, cmap="YlOrRd")
plt.title("Missing Values Heatmap")
plt.show()

# Fill with placeholder where appropriate
df['director'].fillna('Unknown', inplace=True)
df['cast'].fillna('Not Specified', inplace=True)
df['country'].fillna('Not Specified', inplace=True)
df['rating'].fillna(df['rating'].mode()[0], inplace=True)
df['date_added'].fillna(df['date_added'].mode()[0], inplace=True)  # You already did this earlier

# Reset index
df.reset_index(drop=True, inplace=True)

# Final shape
print("Final Dataset Shape after safe cleaning:", df.shape)

print(f"Number of Rows: {df.shape[0]}")
print(f"Number of Columns: {df.shape[1]}")
print("\nColumn Names:\n", df.columns.tolist())

"""## **What all manipulations have you done and insights you found?**

#### 1. **Date Columns Converted**:
- **start_time** and **end_time** were converted to datetime format for easier analysis of time-based patterns.

#### 2. **Numeric Columns Ensured**:
- Columns like **bike_id** and **station_ids** were ensured to have numeric values for proper analysis.

#### 3. **Missing Values Handled**:
- **birth_year** was filled with the median value.
- **gender** was filled with "Unknown" to handle missing demographic data.

#### 4. **New Features Created (Feature Engineering)**:
- **Trip Duration (minutes)**: Calculated duration of trips for analysis.
- **Day of Week**: Extracted from the start date for trend analysis.
- **Rider Age**: Calculated based on the **birth_year**.

#### 5. **Heatmap Visualization**:
- Created a heatmap to visualize and understand patterns in missing data.

#### 6. **Reset Index**:
- Reset the index after cleaning the data to ensure consistency.

### üîç Insight:
The dataset is now clean, consistent, and ready for deeper analysis, allowing us to explore patterns such as delivery delays, cost, and logistics more effectively.

# **STEP 4: EDA (Exploratory Data Analysis) , Data Vizualization, Storytelling & Experimenting with charts : Understand the relationships between variables**

**This section presents visual insights using the** **UBM** **(Univariate, Bivariate, Multivariate) approach.**

**Understand the relationships between variables**

‚úÖ U - Univariate Analysis  
‚úÖ B - Bivariate Analysis  
‚úÖ M - Multivariate Analysis

# **UNIVARIATE ANALYSIS :**

Focuses on one variable at a time.

## **Chart 1: Distribution of Content Type (Movie vs TV Show)**

**Why this chart?**

To understand the composition of Netflix's content ‚Äî are there more movies or TV shows?

**Insight:**

Netflix has more movies than TV shows, indicating a focus on short-form content.

**Business Impact:**

If binge-watching habits increase, Netflix might consider boosting TV show production to retain users longer.
"""

# Bar Chart - Count of Content Types
plt.figure(figsize=(6,4))
sns.countplot(data=df, x='type', palette='Set2')
plt.title('Distribution of Content Type on Netflix', fontsize=14)
plt.xlabel('Type of Content')
plt.ylabel('Count')
plt.show()

"""## **Chart 2: Top 10 Content Ratings**

**Why this chart?**

To understand the distribution of content ratings and suitability for various age groups.

**Insight:**

Most content is rated 'TV-MA' and 'TV-14', targeting mature and teen audiences.

**Business Impact:**

This helps in tailoring parental controls, age recommendations, and content promotion strategies.
"""

# Bar Chart
plt.figure(figsize=(10,6))
df['rating'].value_counts().head(10).plot(kind='bar', color='tomato')
plt.title('Top 10 Content Ratings on Netflix', fontsize=14)
plt.xlabel('Rating')
plt.ylabel('Count')
plt.xticks(rotation=45)
plt.show()

"""## **Chart 3: Year-wise Content Release Distribution**

**Why this chart?**

To see which years had the highest content releases on Netflix

**Insight:**

Content releases have increased significantly in the last decade.

**Business Impact:**

Helps Netflix understand trends and make decisions on acquiring or producing newer vs. classic content.
"""

# Line Chart
plt.figure(figsize=(12,6))
df['release_year'].value_counts().sort_index().plot(kind='line', color='mediumslateblue')
plt.title('Content Release Trend Over Years', fontsize=14)
plt.xlabel('Release Year')
plt.ylabel('Count')
plt.grid(True)
plt.show()

"""## **Chart 4: Top 10 Countries Producing Content**

**Why this chart?**

To identify which countries dominate the Netflix content library.

**Insight:**

The US is the largest contributor, followed by India and the UK.

**Business Impact:**

Supports localized content investment, licensing, and regional content strategy.
"""

# Horizontal Bar Chart
plt.figure(figsize=(12,6))
df['country'].value_counts().head(10).plot(kind='barh', color='seagreen')
plt.title('Top 10 Content-Producing Countries', fontsize=14)
plt.xlabel('Number of Titles')
plt.ylabel('Country')
plt.gca().invert_yaxis()
plt.show()

"""## **Chart 5: Top 10 Most Common Genres**

**Why this chart?**

To explore which genres are most popular and widely available on Netflix.

**Insight:**

Dramas and comedies dominate, followed by documentaries and thrillers.

**Business Impact:**

Helps Netflix invest more in high-demand genres and tailor content recommendations.
"""

# Bar Chart
from collections import Counter

genre_list = df['listed_in'].dropna().str.split(', ')
flat_genres = [genre for sublist in genre_list for genre in sublist]
genre_counts = Counter(flat_genres).most_common(10)

genres, counts = zip(*genre_counts)

plt.figure(figsize=(10,6))
sns.barplot(x=list(counts), y=list(genres), palette='muted')
plt.title('Top 10 Most Common Genres on Netflix', fontsize=14)
plt.xlabel('Number of Titles')
plt.ylabel('Genre')
plt.show()

"""# **BIVARIATE ANALYSIS :**

Relationship between 2 variables.

## **Chart 6: Content Type vs Release Year**

**Why this chart?**

To see how the release of movies vs TV shows has evolved over time.

**Insight:**

Movies have consistently outnumbered TV shows, but the growth in shows is significant post-2016

**Business Impact:**

Netflix can observe shifting audience interests and plan production accordingly
"""

# Stacked bar chart
plt.figure(figsize=(14,6))
sns.countplot(data=df, x='release_year', hue='type', palette='Set1', order=sorted(df['release_year'].unique())[-20:])
plt.title('Content Type vs Release Year (Last 20 Years)', fontsize=14)
plt.xlabel('Release Year')
plt.ylabel('Number of Titles')
plt.xticks(rotation=45)
plt.legend(title='Type')
plt.tight_layout()
plt.show()

"""## **Chart 7: Top 5 Genres (Based on Listed_in column)**

**Why this chart?**

To visualize which genres are most popular on Netflix, helping understand user preferences.

**Insight:**

Genres like Dramas, Comedies, and Action & Adventure are dominant.

**Business Impact:**

Helps Netflix decide where to expand their content library and invest in high-demand genres.
"""

# Split 'listed_in' (genre column) and count top genres
from collections import Counter

genre_series = df['listed_in'].dropna().apply(lambda x: x.split(', '))
genre_list = [genre for sublist in genre_series for genre in sublist]
top_genres = dict(Counter(genre_list).most_common(5))

# Donut Chart
plt.figure(figsize=(6,6))
plt.pie(top_genres.values(), labels=top_genres.keys(), startangle=90,
        autopct='%1.1f%%', wedgeprops=dict(width=0.4), colors=sns.color_palette('pastel'))
plt.title('Donut Chart: Top 5 Genres on Netflix')
plt.show()

"""## **Chart 8: Scatter Plot ‚Üí Year Added vs Release Year**

**Why this chart?**

To observe how much older content Netflix adds each year.

**Insight:**

Most added content is released within the last 5‚Äì10 years, with rare old classics.

**Business Impact:**

Can help Netflix plan more archival content releases to attract niche audiences.
"""

# Scatter Plot
plt.figure(figsize=(10,6))
sns.scatterplot(data=df, x='release_year', y='year_added', hue='type', alpha=0.6)
plt.title('Scatter Plot: Release Year vs Year Added')
plt.xlabel('Release Year')
plt.ylabel('Year Added to Netflix')
plt.legend(title='Type')
plt.tight_layout()
plt.show()

"""## **Chart 9: Top 5 Countries vs Content Type**

**Why this chart?**

To check which type of content (movies or shows) dominates in top-producing countries.

**Insight:**

US dominates in both, while India and UK produce significantly more movies than shows

**Business Impact:**

Can guide country-specific investments and content deals.
"""

# Stacked bar chart - Horizontal
top_countries = df['country'].value_counts().head(5).index
df_top_countries = df[df['country'].isin(top_countries)]

plt.figure(figsize=(10,6))
sns.countplot(data=df_top_countries, y='country', hue='type', palette='pastel')
plt.title('Content Type Distribution in Top 5 Countries', fontsize=14)
plt.xlabel('Count')
plt.ylabel('Country')
plt.legend(title='Type')
plt.tight_layout()
plt.show()

"""## **Chart 10: Cumulative Content Additions Over Time**

**Why this chart?**

To visualize how Netflix‚Äôs content library has grown over the years.

**Insight:**

Massive growth between 2016‚Äì2020, with movies added at a higher rate.

**Business Impact:**

Reveals content growth strategy and timing for major library expansions.
"""

# Stacked Area Chart

content_growth = df.groupby(['year_added', 'type']).size().unstack().fillna(0).cumsum()

plt.figure(figsize=(12,6))
content_growth.plot.area(stacked=True, colormap='Set3')
plt.title('Cumulative Netflix Content Growth Over Time')
plt.xlabel('Year Added')
plt.ylabel('Total Titles')
plt.tight_layout()
plt.show()

"""# **MULTIVARIATE ANALYSIS :**

Understand interaction between 3 or more variables.

## **Chart 11: Boxplot ‚Üí Duration vs Release Year by Type**

**Why this chart?**

To examine how movie/TV durations have changed over time.

**Insight:**

Movie durations are more spread and fluctuating, while TV shows remain consistent regardless of year.

**Business Impact:**

Helps decide optimal duration trends for new content production.
"""

# Filter only Movies
movies_df = df[df['type'] == 'Movie'].copy()

# Convert duration column to integer minutes (e.g., "90 min" ‚Üí 90)
movies_df['duration_mins'] = movies_df['duration'].str.extract('(\d+)').astype(float)


plt.figure(figsize=(14,6))
sns.boxplot(data=movies_df, x='release_year', y='duration_mins', hue='type')
plt.title('Boxplot: Duration vs Release Year by Type')
plt.xlabel('Release Year')
plt.ylabel('Duration (mins)')
plt.xticks(rotation=45)
plt.show()

"""## **Chart 12: Heatmap ‚Üí Month Added vs Rating vs Type Count**

**Why this chart?**

To track which months add what kind of rated content, across content types.

**Insight:**

TV-MA and PG-13 content surge in summer months; Dec sees high Movie uploads.

**Business Impact:**

Optimizes release calendar and marketing pushes during seasonal spikes.
"""

pivot_df = df.pivot_table(index='month_added', columns='rating', values='type', aggfunc='count').fillna(0)

plt.figure(figsize=(14,6))
sns.heatmap(pivot_df, cmap='YlOrRd', annot=False, linewidths=0.5)
plt.title('Heatmap: Month Added vs Rating Count')
plt.xlabel('Rating')
plt.ylabel('Month Added')
plt.show()

"""## **Chart 13: Countplot ‚Üí Top 5 Genres (listed_in) by Type and Rating**

**Why this chart?**

To see what genres are most popular and how they're rated across Movies & TV.

**Insight Goal:**

Dramas dominate across all types; ‚ÄòTV-MA‚Äô is frequent in shows while ‚ÄòR‚Äô is high in movies.

**Business Impact:**

Genre planning and acquisition targeting for both formats can be optimized.
"""

# Simplify to top 5 genres
df['main_genre'] = df['listed_in'].str.split(',').str[0]
top_genres = df['main_genre'].value_counts().head(5).index

genre_df = df[df['main_genre'].isin(top_genres)]

plt.figure(figsize=(14,6))
sns.countplot(data=genre_df, x='main_genre', hue='rating')
plt.title('Countplot: Top Genres by Rating')
plt.xlabel('Genre')
plt.ylabel('Content Count')
plt.xticks(rotation=45)
plt.legend(title='Rating', bbox_to_anchor=(1, 1))
plt.show()

"""## **Chart 14: Sunburst Chart: Type ‚Üí Rating ‚Üí Top Country**

**Why this chart?**

To visually decode how content type and rating are distributed across countries in a hierarchical format.

**Insight Goal:**

Movies dominate in PG and R ratings across the US and India, while TV shows tend to cluster around TV-MA in the US.

**Business Impact:**

Gives a regional and genre-based view of what types of content work where ‚Äî valuable for regional production targeting.
"""

import plotly.express as px

top_countries = df['country'].value_counts().head(5).index
sunburst_df = df[df['country'].isin(top_countries)]

fig = px.sunburst(
    sunburst_df,
    path=['type', 'rating', 'country'],
    title='üåû Sunburst Chart: Type ‚Üí Rating ‚Üí Country',
    width=700, height=600
)
fig.show()

"""## **Chart 15: Grouped Bar Chart: Type vs Rating by Release Year (Recent 5 Years)**

**Why this chart?**

To analyze how content rating distribution varies across content types in recent years.

**Insight Goal:**

TV Shows tend to dominate in mature ratings in recent years, while Movies are more evenly spread.

**Business Impact:**

Netflix can align age-appropriate content creation based on shifting audience demographics.
"""

# Filter last 5 years of data
recent_years = df[df['release_year'] >= df['release_year'].max() - 5]

# Group and count
grouped = recent_years.groupby(['release_year', 'type', 'rating']).size().reset_index(name='count')

# Plot
plt.figure(figsize=(14,6))
sns.barplot(data=grouped, x='release_year', y='count', hue='rating')
plt.title('Content Rating Distribution by Type (Recent 5 Years)')
plt.xlabel('Release Year')
plt.ylabel('Count')
plt.legend(bbox_to_anchor=(1.05, 1), title='Rating')
plt.tight_layout()
plt.show()

"""# **STEP 5: Solution to Business Objective**

## **What do you suggest the client to achieve Business Objective ?**

### üìÜ Capitalize on Upload Trends  
A significant spike in content uploads occurred during 2019‚Äì2020. Netflix should analyze why those years performed well (e.g., pandemic demand) and plan similar seasonal or event-driven release strategies in the future.

---

### üéûÔ∏è Align Duration with Viewer Preferences  
The majority of movies are under 100 minutes, suggesting short-duration content is more engaging. Netflix should consider keeping movies concise or splitting long narratives into mini-series formats.

---

### üìä Optimize Rating-Wise Distribution  
Content with TV-MA and TV-14 ratings dominates the platform. Netflix should maintain this focus but also introduce more PG and family-oriented content to capture a broader audience, especially for shared viewing.

---

### üçø Leverage Genre Popularity for Content Planning  
Top genres include Dramas, Comedies, and Documentaries. These should be prioritized in the upcoming content calendar. Additionally, Netflix can experiment with hybrid formats like ‚Äúdocu-dramas‚Äù to engage both niches.

---

### üë™ Expand Family & Youth Offerings  
There's a visible gap in children and youth-focused content. Increasing shows/movies in this segment can help expand subscriber bases among families with kids.

---

### üîÅ Use Data to Guide Release Schedules  
Release more content during months with high engagement (e.g., December holidays) to maximize impact. Netflix can also use AI to predict ideal release windows based on user behavior.

---

### üß† Final Note  
By leveraging user preferences in duration, genre, rating, and geography, Netflix can optimize its content library, improve personalization, and enhance global viewer satisfaction.

# **Conclusion**

In this Netflix EDA project, we cleaned and analyzed 7,787 titles to understand content trends and patterns.

### üîç Key Insights:
- **Content Type:** TV Shows and Movies dominate, with a stronger focus on US-based content.
- **Genres:** Drama and Documentaries are the most common.
- **Time Trends:** Significant rise in uploads during 2019‚Äì2020.
- **Duration:** Most movies are under 100 minutes ‚Äî ideal for quick consumption.
- **Ratings:** TV-MA and TV-14 dominate, indicating a focus on mature audiences.

### üéØ Business Suggestions:
- Expand global and family-friendly content.
- Focus on high-performing genres like drama.
- Leverage peak content years (e.g., 2020) for marketing.
- Use content duration insights to shape future releases.



This analysis equips Netflix with data-driven strategies to optimize content, boost engagement, and retain subscribers.
"""